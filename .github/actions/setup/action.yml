name: 'Setup Node & Install Dependencies'
description: 'Checkout, setup pnpm & Node, install dependencies, and setup Playwright'
inputs:
  install-e2e-tools:
    description: 'Whether to install Playwright and other e2e testing tools'
    required: false
    default: 'true'
runs:
  using: composite
  steps:
    - name: Setup pnpm
      uses: pnpm/action-setup@v4

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version-file: '.nvmrc'
        cache: 'pnpm'

    - name: Install dependencies
      run: pnpm install --frozen-lockfile --prefer-offline
      shell: bash

    - name: Get Playwright version
      if: inputs.install-e2e-tools == 'true'
      id: playwright-version
      run: echo "version=$(pnpm list @playwright/test --depth=0 --json | jq -r '.[0].devDependencies["@playwright/test"].version')" >> $GITHUB_OUTPUT
      shell: bash

    - name: Cache Playwright browsers
      if: inputs.install-e2e-tools == 'true'
      uses: actions/cache@v4
      id: playwright-cache
      with:
        path: |
          .playwright-browsers
        key: ${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.version }}
        restore-keys: |
          ${{ runner.os }}-playwright-

    - name: Install Playwright browsers and system dependencies
      if: inputs.install-e2e-tools == 'true' && steps.playwright-cache.outputs.cache-hit != 'true'
      run: pnpm exec playwright install --with-deps
      shell: bash
      env:
        PLAYWRIGHT_BROWSERS_PATH: .playwright-browsers

    - name: Install Playwright system dependencies only
      if: inputs.install-e2e-tools == 'true' && steps.playwright-cache.outputs.cache-hit == 'true'
      run: pnpm exec playwright install-deps
      shell: bash
      env:
        PLAYWRIGHT_BROWSERS_PATH: .playwright-browsers
